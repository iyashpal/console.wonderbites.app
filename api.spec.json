{
  "openapi": "3.0.0",
  "info": {
    "title": "Wonderbites App",
    "description": "",
    "version": "v1.0",
    "license": {
      "name": "MIT",
      "url": "https://api.wonderbites.app"
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "servers": [
    {
      "description": "Wonderbites API for public website and mobile applications.",
      "url": "https://api.wonderbites.app/api"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "security": [],
        "summary": "Login",
        "description": "Login users via their email|mobile and password.",
        "operationId": "loginToApp",
        "requestBody": {
          "$ref": "#/components/requestBodies/Login"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "bearer"
                    },
                    "token": {
                      "type": "string",
                      "example": "MQ.TpiVCZx6BGAyA2bgCVd8RNUBFjKKl-TTZH3lM2K_ELSMQ5vBxOb5FmQ3Ly9K"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "InvalidCredentialsException"
                    },
                    "code": {
                      "type": "string",
                      "example": "E_INVALID_AUTH_PASSWORD"
                    },
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "E_INVALID_AUTH_PASSWORD: Password mis-match"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "ValidationException"
                    },
                    "code": {
                      "type": "string",
                      "example": "E_VALIDATION_FAILURE"
                    },
                    "status": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "string",
                      "example": "E_VALIDATION_FAILURE: Validation Exception"
                    },
                    "errors": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "Email address is required to login."
                        },
                        "password": {
                          "type": "string",
                          "example": "Enter password to login."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "security": [],
        "summary": "Register",
        "description": "Register users to the wonderbites cloud.",
        "operationId": "registerToApp",
        "requestBody": {
          "$ref": "#/components/requestBodies/Register"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "description": "Validation",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "ValidationException",
                      "description": "Name of the response"
                    },
                    "code": {
                      "type": "string",
                      "example": "E_VALIDATION_FAILURE",
                      "description": "Alpha code of the response."
                    },
                    "status": {
                      "type": "integer",
                      "example": 422,
                      "description": "Status code of response."
                    },
                    "message": {
                      "type": "string",
                      "example": "E_VALIDATION_FAILURE: Validation Exception",
                      "description": "Default response message."
                    },
                    "errors": {
                      "type": "object",
                      "description": "Validation errors.",
                      "properties": {
                        "first_name": {
                          "type": "string",
                          "example": "First name is required.",
                          "description": "First name field error."
                        },
                        "last_name": {
                          "type": "string",
                          "example": "Last name is required.",
                          "description": "Last name field error."
                        },
                        "mobile": {
                          "type": "string",
                          "example": "Mobile no. is required.",
                          "description": "Mobile no. field error."
                        },
                        "email": {
                          "type": "string",
                          "example": "Email address is required.",
                          "description": "Email field error."
                        },
                        "password": {
                          "type": "string",
                          "example": "Choose a password.",
                          "description": "Password field error."
                        },
                        "password_confirmation": {
                          "type": "string",
                          "example": "Password didn't match.",
                          "description": "Password match error."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "security": [
          {
            "BearerAuth": [
              "token:revoke"
            ]
          }
        ],
        "summary": "Logout",
        "description": "Revoke logged in user's auth token.",
        "operationId": "logoutFromApp",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "revoked": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/users/auth": {
      "get": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": [
              "auth:view"
            ]
          }
        ],
        "summary": "Auth User",
        "description": "Get the authenticated user data based on the authentication token.",
        "operationId": "authenticatedUser",
        "parameters": [
          {
            "name": "with",
            "in": "query",
            "required": false,
            "description": "Additional data related to user.",
            "schema": {
              "type": "array",
              "format": "int64",
              "example": [
                "user.addresses"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "When Request Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/users/avatar": {
      "put": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": [
              "avatar:update"
            ]
          }
        ],
        "summary": "Profile Avatar",
        "description": "Update user's profile avatar.",
        "operationId": "userAvatar",
        "requestBody": {
          "content": {
            "image/*": {
              "schema": {
                "type": "object",
                "required": [
                  "avatar"
                ],
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": [
              "auth:update"
            ]
          }
        ],
        "summary": "Update Profile",
        "description": "Update user profile data.",
        "operationId": "updateUserByID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the user.",
            "example": 1,
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "first_name",
                  "last_name"
                ],
                "properties": {
                  "first_name": {
                    "type": "string",
                    "example": "John",
                    "description": "First name of the user."
                  },
                  "last_name": {
                    "type": "string",
                    "example": "Doe",
                    "description": "Last name of the image."
                  },
                  "avatar": {
                    "type": "string",
                    "format": "binary",
                    "description": "Uploaded image for the user avatar"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "security": [
          {
            "BearerAuth": [
              "auth:view"
            ]
          }
        ],
        "summary": "User Profile",
        "description": "Get the authenticated user data based on the authentication token.",
        "operationId": "showUserByID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "example": 1
            }
          },
          {
            "name": "with",
            "in": "query",
            "required": false,
            "description": "Additional data related to user.",
            "schema": {
              "type": "array",
              "format": "int64",
              "example": [
                "user.addresses"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/addresses": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "security": [
          {
            "BearerAuth": [
              "address:list"
            ]
          }
        ],
        "summary": "Browse Addresses",
        "operationId": "getAddressesList",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Addresses"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Addresses"
        ],
        "security": [
          {
            "BearerAuth": [
              "address:create"
            ]
          }
        ],
        "summary": "Create Address",
        "operationId": "storeAddressesList",
        "requestBody": {
          "$ref": "#/components/requestBodies/Address"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Addresses"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/addresses/{id}": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "security": [
          {
            "BearerAuth": [
              "address:view"
            ]
          }
        ],
        "summary": "View Address",
        "operationId": "getAddressesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Addresses"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Addresses"
        ],
        "security": [
          {
            "BearerAuth": [
              "address:edit", "address:update"
            ]
          }
        ],
        "summary": "Update Address",
        "operationId": "putAddressesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Address"
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "patch": {
        "tags": [
          "Addresses"
        ],
        "security": [
          {
            "BearerAuth": [
              "address:edit", "address:update"
            ]
          }
        ],
        "summary": "Update Address",
        "operationId": "patchAddressesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Addresses"
        ],
        "security": [
          {
            "BearerAuth": [
              "address:delete", "address:destroy"
            ]
          }
        ],
        "summary": "Delete Address",
        "description": "Request to delete the user address.",
        "operationId": "deleteAddressesById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "description": "Unique ID of the address."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "List",
        "description": "By passing in the appropriate options, you can search for available categories in the system.",
        "operationId": "searchCategory",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "The type of category (i.e. product, ingredient, cuisine etc.)",
            "style": "form",
            "required": false,
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "with",
            "in": "query",
            "description": "Pass an optional strings of category",
            "required": false,
            "schema": {
              "type": "array",
              "items": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results matching criteria"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "requestBodies": {
      "Login": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "example": "john.doe@example.com",
                  "description": "Registered email of the user."
                },
                "password": {
                  "type": "string",
                  "example": "secret",
                  "description": "Password used while account registration."
                }
              }
            }
          }
        }
      },
      "Register": {
        "description": "Form fields needed for the request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "first_name",
                "last_name",
                "mobile",
                "email",
                "password",
                "password_confirmation"
              ],
              "properties": {
                "first_name": {
                  "type": "string",
                  "example": "John",
                  "description": "First name of the user."
                },
                "last_name": {
                  "type": "string",
                  "example": "Doe",
                  "description": "Last name of the user."
                },
                "mobile": {
                  "type": "string",
                  "example": "+xx xxxx-xxxx",
                  "description": "Mobile number of the user. User can also login with this number."
                },
                "email": {
                  "type": "string",
                  "example": "john.doe@example.com",
                  "description": "Login email of the user."
                },
                "password": {
                  "type": "string",
                  "example": "secret",
                  "description": "Login password."
                },
                "password_confirmation": {
                  "type": "string",
                  "example": "secret",
                  "description": "Confirmation of the entered password."
                }
              }
            }
          }
        }
      },
      "Address": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "first_name",
                "last_name",
                "street",
                "city",
                "phone",
                "type"
              ],
              "properties": {
                "first_name": {
                  "type": "string",
                  "example": "John",
                  "description": "First name of the user."
                },
                "last_name": {
                  "type": "string",
                  "example": "Doe",
                  "description": "Last name of the user."
                },
                "street": {
                  "type": "string",
                  "example": "XYZ, ABC",
                  "description": "Street of the user address."
                },
                "city": {
                  "type": "string",
                  "example": "US",
                  "description": "City name of the user address"
                },
                "phone": {
                  "type": "string",
                  "example": "+xx xxxx-xxxx",
                  "description": "Contact no. of the user."
                },
                "type": {
                  "type": "string",
                  "example": "home",
                  "description": "Address type."
                },
                "location": {
                  "type": "object",
                  "description": "Location **LAT** & **LNG** coordinates.",
                  "properties": {
                    "lat": {
                      "type": "string",
                      "example": 3257896,
                      "description": "Latitude of address."
                    },
                    "lng": {
                      "type": "string",
                      "example": -85.3257896,
                      "description": "Longitude of address."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Authorization",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "AuthorizationException",
                  "description": "Name of the response."
                },
                "code": {
                  "type": "string",
                  "example": "E_UNAUTHORIZED_ACCESS",
                  "description": "Alpha code of the response."
                },
                "status": {
                  "type": "number",
                  "example": 401,
                  "description": "Status code of response."
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized access",
                  "description": "Default response message."
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "Categories": {
        "required": [
          "type",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "type": {
            "type": "string",
            "example": "Product | Ingredient | Cuisine etc."
          },
          "parent": {
            "type": "integer",
            "description": "Reference to parent category.",
            "example": 0
          }
        }
      },
      "Users": {
        "required": [
          "email",
          "first_name",
          "id",
          "last_name",
          "mobile",
          "password"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "1",
            "description": "Unique ID of the record."
          },
          "first_name": {
            "type": "string",
            "example": "John",
            "description": "First name of the user."
          },
          "last_name": {
            "type": "string",
            "example": "Doe",
            "description": "Last name of the user."
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com",
            "description": "Login email of the user."
          },
          "password": {
            "type": "string",
            "example": "password",
            "description": "Hashed password of the user."
          },
          "avatar": {
            "type": "object",
            "example": {
              "name": "avatars/clc07y9mf00014wp969gabvh6.png",
              "extname": "png",
              "size": "127890",
              "mimeType": "image/png"
            },
            "description": "Cloud storage data of image."
          },
          "address_id": {
            "type": "number",
            "example": 1,
            "description": "Default delivery address unique ID."
          },
          "remember_me_token": {
            "type": "string",
            "example": null,
            "description": "Remember me token."
          },
          "mobile": {
            "type": "string",
            "example": "+xx xxxxx xxxxx",
            "description": "Mobile number of the user. User can also login with this number."
          },
          "status": {
            "type": "integer",
            "example": 1,
            "description": "User status (for internal use only.)"
          },
          "language": {
            "type": "string",
            "example": "EN",
            "description": "Default selected language of the user."
          },
          "created_at": {
            "type": "string",
            "example": "2022-10-20 14:21:28.92+05:30",
            "description": "Date when user registered to app/website."
          },
          "updated_at": {
            "type": "string",
            "example": "2022-10-20 14:21:28.92+05:30",
            "description": "Date when user last updated their data."
          },
          "deleted_at": {
            "type": "string",
            "example": null,
            "description": "Date when user deleted their account."
          }
        }
      },
      "Addresses": {
        "required": [
          "city",
          "first_name",
          "last_name",
          "phone",
          "street",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1,
            "description": "Unique ID of the record."
          },
          "user_id": {
            "type": "integer",
            "example": 1,
            "description": "ID of the user who owns the address."
          },
          "first_name": {
            "type": "string",
            "example": "John",
            "description": "First name of the recipient."
          },
          "last_name": {
            "type": "string",
            "example": "Doe",
            "description": "Last name of the recipient"
          },
          "street": {
            "type": "string",
            "example": "845 Meadows Rd",
            "description": "Street name."
          },
          "city": {
            "type": "string",
            "example": "Aspen",
            "description": "City name"
          },
          "phone": {
            "type": "string",
            "example": "(970) 925-4240",
            "description": "Contact no. of recipient."
          },
          "location": {
            "type": "object",
            "example": {
              "lat": 39.202683,
              "lng": -106.831857
            }
          },
          "created_at": {
            "type": "string",
            "example": "2022-12-27 07:37:43.815+00",
            "description": "Date when address added."
          },
          "updated_at": {
            "type": "string",
            "example": "2022-12-29 11:21:28.195+00",
            "description": "Date when address last updated."
          },
          "deleted_at": {
            "type": "string",
            "example": null,
            "description": "Date when address deleted."
          }
        }
      }
    }
  }
}
